[{"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\index.js":"1","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\reportWebVitals.js":"2","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\App.js":"3","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\LoginEmployee.js":"4","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\Welcome.js":"5","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\RegisterEmployee.js":"6","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\RegisterCompany.js":"7","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\LoginCompany.js":"8","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\ApplicationPage.js":"9","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\JobApplications.js":"10","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\MyApplications.js":"11","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\CreateJobPost.js":"12","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\CreateApplication.js":"13","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\UserProfile.js":"14"},{"size":517,"mtime":1608115748663,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1608115748663,"results":"17","hashOfConfig":"16"},{"size":2279,"mtime":1608125565856,"results":"18","hashOfConfig":"16"},{"size":3838,"mtime":1608129785505,"results":"19","hashOfConfig":"16"},{"size":2627,"mtime":1608115748663,"results":"20","hashOfConfig":"16"},{"size":5555,"mtime":1608115748662,"results":"21","hashOfConfig":"16"},{"size":5066,"mtime":1608115748662,"results":"22","hashOfConfig":"16"},{"size":3218,"mtime":1608124039181,"results":"23","hashOfConfig":"16"},{"size":36,"mtime":1608120971174,"results":"24","hashOfConfig":"16"},{"size":36,"mtime":1608120994389,"results":"25","hashOfConfig":"16"},{"size":7775,"mtime":1608140341180,"results":"26","hashOfConfig":"16"},{"size":0,"mtime":1608120185205,"results":"27","hashOfConfig":"16"},{"size":38,"mtime":1608120774074,"results":"28","hashOfConfig":"16"},{"size":2644,"mtime":1608139704214,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"13ogosc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\index.js",[],["64","65"],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\reportWebVitals.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\App.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\LoginEmployee.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\Welcome.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\RegisterEmployee.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\RegisterCompany.js",["66","67"],"import React from 'react';\r\nimport { Form, Button, Container, Grid} from \"semantic-ui-react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport {toast} from \"react-toastify\";\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass SignUpCompany extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n    };\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const {currentTarget} = e;\r\n    const {value, name} = currentTarget;\r\n    this.setState( { [name]:value});\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, address, phone, email, password, username } = this.state;\r\n\r\nfetch(\"http://localhost:8080/company\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\":\"application/json\",\r\n  },\r\n  body: JSON.stringify({ name, address, phone, email, password }),\r\n})\r\n  .then((r) => {\r\n    if(r.ok) {\r\n      return r;\r\n    }\r\n    if ( r.status === 401 || r.status === 403 || r.status === 500 ) {\r\n      return Promise.reject( new Error(\"Something went wrong\"));\r\n    }\r\n  })\r\n  .then((r) => r.json())\r\n  .then((response) => {\r\n  toast.success(\"Success. You're directed to the main page\");\r\n  setTimeout( () =>  {\r\n    this.props.history.push(\"/\");\r\n  }, 2000);\r\n  })\r\n  .catch((e) => {\r\n    toast.error(e.message);\r\n  });\r\n};\r\n\r\ncomponentDidMount = () => {\r\n  setInterval(() => {\r\n    console.log(\"\" + new Date());\r\n  }, 1000);\r\n};\r\n \r\n  render = () => {\r\n    const { usernameError, passwordError, passwordRepeatError } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Container> \r\n            <Grid>\r\n              <Grid.Row columns=\"equal\" centered>\r\n                <Grid.Column width={8}>\r\n                  <Form \r\n                    onSubmit={this.handleSubmit}\r\n                    onReset={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({\r\n                        name: \"\",\r\n                        address: \"\",\r\n                        phone: \"\",\r\n                        email: \"\",\r\n                        password: \"\",\r\n                      });\r\n                    }}\r\n                  >\r\n                  \r\n                  <h1> Sign Up </h1><br></br>\r\n                  <Form.Field>\r\n                  <label> Name  </label>\r\n                  <Form.Input\r\n                    name=\"name\" \r\n                    required =\"true\" \r\n                    error = {usernameError}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field> \r\n                  <label> Password </label>\r\n                  <Form.Input\r\n                    type=\"password\" \r\n                    name=\"password\"\r\n                    required\r\n                    error = {passwordError}\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field> \r\n                  <label> Address </label>\r\n                  <Form.Input\r\n                    type=\"address\" \r\n                    name=\"address\"\r\n                    required\r\n                    value={this.state.address}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field>\r\n                  <label> Phone </label>\r\n                  <Form.Input\r\n                    name=\"phone\" \r\n                    required =\"true\"\r\n                    value={this.state.phone}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field>\r\n                  <label> E - mail </label>\r\n                  <Form.Input\r\n                    name=\"email\" \r\n                    required =\"true\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  </Form.Field>\r\n\r\n                  <Form.Field>\r\n                  <label> E - mail </label>\r\n                  <Form.Input\r\n                    name=\"username\" \r\n                    required =\"true\"\r\n                    value={this.state.username}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  </Form.Field>\r\n \r\n                  <Button.Group fluid>\r\n                  <Button as = {Link} to=\"/logincompany\"> Do you have an account? </Button>\r\n                  <Button type=\"submit\" color=\"olive\"> Submit </Button>\r\n                \r\n                  </Button.Group>   \r\n\r\n                  </Form>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </header>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(SignUpCompany);","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\LoginCompany.js",["68"],"import React, { useState } from \"react\";\r\nimport { Container, Grid, Divider, Form, Button } from \"semantic-ui-react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nconst LoginEmployee = () => {\r\n  const history = useHistory();\r\n\r\n  const [usernamePassword, setUsernamePassword] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [usernamePasswordError] = useState({\r\n    username: null,\r\n    password: null,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { currentTarget } = e;\r\n    const { value, name } = currentTarget;\r\n    setUsernamePassword({\r\n      ...usernamePassword,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(\r\n      `http://localhost:8080/company/${usernamePassword.username}/${usernamePassword.password}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/raw\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        toast.success(\"Successful, please wait...\");\r\n\r\n        let data = JSON.parse(result);\r\n\r\n        setTimeout(() => {\r\n          history.push(\"/jobapplications\");\r\n        }, 3000);\r\n      })\r\n      .catch((e) => {\r\n        toast.error(\"e.message\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Row columns=\"equal\" centered>\r\n            <Grid.Column width={8}>\r\n              <h1 centered> Welcome </h1>\r\n              <br></br>\r\n              <Form\r\n                onSubmit={handleSubmit}\r\n                onReset={(e) => {\r\n                  e.preventDefault();\r\n                  setUsernamePassword({ username: \"\", password: \"\" });\r\n                }}\r\n              >\r\n                <Form.Field>\r\n                  <label> Username</label>\r\n                  <Form.Input\r\n                    name=\"username\"\r\n                    required\r\n                    error={usernamePasswordError.username}\r\n                    value={usernamePassword.username}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label> Password </label>\r\n                  <Form.Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    required\r\n                    error={usernamePasswordError.password}\r\n                    value={usernamePassword.password}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n\r\n                <Button.Group fluid>\r\n                  <Button as={Link} to=\"/registercompany\">\r\n                    {\" \"}\r\n                    Open an account{\" \"}\r\n                  </Button>\r\n                  <Button type=\"submit\" color=\"olive\">\r\n                    Login\r\n                  </Button>\r\n                </Button.Group>\r\n              </Form>\r\n              <Divider />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginEmployee;\r\n","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\ApplicationPage.js",["69"],"const ApplicationPage = () => {\r\n\r\n}","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\JobApplications.js",["70"],"const JobApplications = () => {\r\n\r\n}","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\MyApplications.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\CreateJobPost.js",[],"C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\CreateApplication.js",["71"],"const CreateApplication = () => {\r\n\r\n}","C:\\Users\\Can\\Desktop\\Workspace\\cs413-ui\\ui-spongejob\\src\\UserProfile.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":30,"column":52,"nodeType":"78","messageId":"79","endLine":30,"endColumn":60},{"ruleId":"76","severity":1,"message":"80","line":66,"column":43,"nodeType":"78","messageId":"79","endLine":66,"endColumn":62},{"ruleId":"76","severity":1,"message":"81","line":46,"column":13,"nodeType":"78","messageId":"79","endLine":46,"endColumn":17},{"ruleId":"76","severity":1,"message":"82","line":1,"column":7,"nodeType":"78","messageId":"79","endLine":1,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":1,"column":7,"nodeType":"78","messageId":"79","endLine":1,"endColumn":22},{"ruleId":"76","severity":1,"message":"84","line":1,"column":7,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'passwordRepeatError' is assigned a value but never used.","'data' is assigned a value but never used.","'ApplicationPage' is assigned a value but never used.","'JobApplications' is assigned a value but never used.","'CreateApplication' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]